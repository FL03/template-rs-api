name: Rust

env:
  CARGO_TERM_COLOR: always

on:
  pull_request:
    branches-ignore: [ "beta*", "dev*", "next*" ]
  push:
    branches-ignore: [ "beta*", "dev*", "next*" ]
    tags: [ "nightly*",  "v*.*.*" ]
  release:
    types: [ created ]
  repository_dispatch:
    types: [ rust ]
  schedule:
    - cron: "30 9 * * *"
  workflow_dispatch:
    inputs:
      publish:
        default: true
        description: 'Publish'
        required: true
        type: boolean

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [ macos-latest, ubuntu-latest, windows-latest]
        toolchain: [ nightly, stable ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: Build
        run: cargo build --release -v --workspace
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Test
        run: cargo test --all --all-features -v --release
  publish:
    if: ${{ github.event.inputs.publish }}
    name: Publish
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Publish (${{ github.event.repository.name }})
        run: cargo publish --all-features -v -p ${{ github.event.repository.name }} --token ${{ secrets.CARGO_REGISTRY_TOKEN }}